/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Signer, utils } from "ethers";
import type { Provider } from "@ethersproject/providers";
import type {
  EntropyEvents,
  EntropyEventsInterface,
} from "../../../@pythnetwork/entropy-sdk-solidity/EntropyEvents";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        components: [
          {
            internalType: "uint128",
            name: "feeInWei",
            type: "uint128",
          },
          {
            internalType: "uint128",
            name: "accruedFeesInWei",
            type: "uint128",
          },
          {
            internalType: "bytes32",
            name: "originalCommitment",
            type: "bytes32",
          },
          {
            internalType: "uint64",
            name: "originalCommitmentSequenceNumber",
            type: "uint64",
          },
          {
            internalType: "bytes",
            name: "commitmentMetadata",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "uri",
            type: "bytes",
          },
          {
            internalType: "uint64",
            name: "endSequenceNumber",
            type: "uint64",
          },
          {
            internalType: "uint64",
            name: "sequenceNumber",
            type: "uint64",
          },
          {
            internalType: "bytes32",
            name: "currentCommitment",
            type: "bytes32",
          },
          {
            internalType: "uint64",
            name: "currentCommitmentSequenceNumber",
            type: "uint64",
          },
        ],
        indexed: false,
        internalType: "struct EntropyStructs.ProviderInfo",
        name: "provider",
        type: "tuple",
      },
    ],
    name: "Registered",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "provider",
            type: "address",
          },
          {
            internalType: "uint64",
            name: "sequenceNumber",
            type: "uint64",
          },
          {
            internalType: "uint32",
            name: "numHashes",
            type: "uint32",
          },
          {
            internalType: "bytes32",
            name: "commitment",
            type: "bytes32",
          },
          {
            internalType: "uint64",
            name: "blockNumber",
            type: "uint64",
          },
          {
            internalType: "address",
            name: "requester",
            type: "address",
          },
          {
            internalType: "bool",
            name: "useBlockhash",
            type: "bool",
          },
        ],
        indexed: false,
        internalType: "struct EntropyStructs.Request",
        name: "request",
        type: "tuple",
      },
    ],
    name: "Requested",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "provider",
            type: "address",
          },
          {
            internalType: "uint64",
            name: "sequenceNumber",
            type: "uint64",
          },
          {
            internalType: "uint32",
            name: "numHashes",
            type: "uint32",
          },
          {
            internalType: "bytes32",
            name: "commitment",
            type: "bytes32",
          },
          {
            internalType: "uint64",
            name: "blockNumber",
            type: "uint64",
          },
          {
            internalType: "address",
            name: "requester",
            type: "address",
          },
          {
            internalType: "bool",
            name: "useBlockhash",
            type: "bool",
          },
        ],
        indexed: false,
        internalType: "struct EntropyStructs.Request",
        name: "request",
        type: "tuple",
      },
      {
        indexed: false,
        internalType: "bytes32",
        name: "userRevelation",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "bytes32",
        name: "providerRevelation",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "bytes32",
        name: "blockHash",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "bytes32",
        name: "randomNumber",
        type: "bytes32",
      },
    ],
    name: "Revealed",
    type: "event",
  },
] as const;

export class EntropyEvents__factory {
  static readonly abi = _abi;
  static createInterface(): EntropyEventsInterface {
    return new utils.Interface(_abi) as EntropyEventsInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): EntropyEvents {
    return new Contract(address, _abi, signerOrProvider) as EntropyEvents;
  }
}
