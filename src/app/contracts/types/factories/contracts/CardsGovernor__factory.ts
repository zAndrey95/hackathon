/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../common";
import type {
  CardsGovernor,
  CardsGovernorInterface,
} from "../../contracts/CardsGovernor";

const _abi = [
  {
    inputs: [
      {
        internalType: "contract IGame",
        name: "game_",
        type: "address",
      },
      {
        internalType: "address",
        name: "owner_",
        type: "address",
      },
      {
        internalType: "address[]",
        name: "signers_",
        type: "address[]",
      },
      {
        internalType: "address[]",
        name: "collections_",
        type: "address[]",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "ArrayLengthMissMatch",
    type: "error",
  },
  {
    inputs: [],
    name: "ECDSAInvalidSignature",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "length",
        type: "uint256",
      },
    ],
    name: "ECDSAInvalidSignatureLength",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "s",
        type: "bytes32",
      },
    ],
    name: "ECDSAInvalidSignatureS",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "proposer",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "proposerVotes",
        type: "uint256",
      },
    ],
    name: "GovernorInsufficientProposerVotes",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "proposalId",
        type: "uint256",
      },
    ],
    name: "GovernorNonexistentProposal",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "GovernorOnlyProposer",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "proposalId",
        type: "uint256",
      },
      {
        internalType: "enum CardsGovernor.ProposalState",
        name: "current",
        type: "uint8",
      },
      {
        internalType: "bytes32",
        name: "expectedStates",
        type: "bytes32",
      },
    ],
    name: "GovernorUnexpectedProposalState",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidShortString",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidSupport",
    type: "error",
  },
  {
    inputs: [],
    name: "NotAllowedCollection",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "option",
        type: "string",
      },
    ],
    name: "NotAllowedOption",
    type: "error",
  },
  {
    inputs: [],
    name: "NotEnoughVotes",
    type: "error",
  },
  {
    inputs: [],
    name: "NotEnoughWinsForProposal",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "OwnableInvalidOwner",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "OwnableUnauthorizedAccount",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint8",
        name: "bits",
        type: "uint8",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "SafeCastOverflowedUintDowncast",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "str",
        type: "string",
      },
    ],
    name: "StringTooLong",
    type: "error",
  },
  {
    inputs: [],
    name: "TooManyOptions",
    type: "error",
  },
  {
    inputs: [],
    name: "ZeroAddress",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [],
    name: "EIP712DomainChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "proposalId",
        type: "uint256",
      },
    ],
    name: "ProposalCanceled",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "proposalId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "address",
        name: "proposer",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "collection",
        type: "address",
      },
      {
        indexed: false,
        internalType: "string[]",
        name: "options",
        type: "string[]",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "voteStart",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "voteEnd",
        type: "uint256",
      },
    ],
    name: "ProposalCreated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "proposalId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "newCardId",
        type: "uint256",
      },
    ],
    name: "ProposalExecuted",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "voter",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "proposalId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint8",
        name: "support",
        type: "uint8",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "weight",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "string",
        name: "reason",
        type: "string",
      },
    ],
    name: "VoteCast",
    type: "event",
  },
  {
    inputs: [],
    name: "CLOCK_MODE",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "MAX_OPTIONS_SIZE",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "OPTION_TYPEHASH",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "QUORUM_REACHED_TRESHOLD",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "SUCCESS_PROPOSAL_TRESHOLD",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "VOTING_DELAY",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "VOTING_PERIOD",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "WIN_PROPOSAL_TRESHOLD",
    outputs: [
      {
        internalType: "uint16",
        name: "",
        type: "uint16",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "proposalId",
        type: "uint256",
      },
    ],
    name: "_proposalsData",
    outputs: [
      {
        internalType: "uint256",
        name: "totalVotes",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "collection",
        type: "address",
      },
      {
        internalType: "address",
        name: "proposer",
        type: "address",
      },
      {
        internalType: "string[]",
        name: "options",
        type: "string[]",
      },
    ],
    name: "cancel",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "proposalId",
        type: "uint256",
      },
      {
        internalType: "uint8",
        name: "support",
        type: "uint8",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "castVote",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "proposalId",
        type: "uint256",
      },
      {
        internalType: "uint8",
        name: "support",
        type: "uint8",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "string",
        name: "reason",
        type: "string",
      },
    ],
    name: "castVoteWithReason",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "clock",
    outputs: [
      {
        internalType: "uint48",
        name: "",
        type: "uint48",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "eip712Domain",
    outputs: [
      {
        internalType: "bytes1",
        name: "fields",
        type: "bytes1",
      },
      {
        internalType: "string",
        name: "name",
        type: "string",
      },
      {
        internalType: "string",
        name: "version",
        type: "string",
      },
      {
        internalType: "uint256",
        name: "chainId",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "verifyingContract",
        type: "address",
      },
      {
        internalType: "bytes32",
        name: "salt",
        type: "bytes32",
      },
      {
        internalType: "uint256[]",
        name: "extensions",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "collection",
        type: "address",
      },
      {
        internalType: "address",
        name: "proposer",
        type: "address",
      },
      {
        internalType: "string[]",
        name: "options",
        type: "string[]",
      },
    ],
    name: "execute",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "game",
    outputs: [
      {
        internalType: "contract IGame",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "getVotes",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "collection",
        type: "address",
      },
      {
        internalType: "address",
        name: "proposer",
        type: "address",
      },
      {
        internalType: "string[]",
        name: "options",
        type: "string[]",
      },
    ],
    name: "hashProposal",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "proposalId",
        type: "uint256",
      },
    ],
    name: "proposalDeadline",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "proposalId",
        type: "uint256",
      },
    ],
    name: "proposalProposer",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "proposalId",
        type: "uint256",
      },
    ],
    name: "proposalSnapshot",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "proposalId",
        type: "uint256",
      },
    ],
    name: "proposalVotes",
    outputs: [
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "collection",
        type: "address",
      },
      {
        internalType: "string[]",
        name: "options",
        type: "string[]",
      },
      {
        internalType: "bytes[]",
        name: "signatures",
        type: "bytes[]",
      },
    ],
    name: "propose",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "proposalId",
        type: "uint256",
      },
    ],
    name: "state",
    outputs: [
      {
        internalType: "enum CardsGovernor.ProposalState",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "digest",
        type: "bytes32",
      },
      {
        internalType: "bytes",
        name: "signature",
        type: "bytes",
      },
    ],
    name: "verify",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "version",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
] as const;

const _bytecode =
  "0x6101606040523480156200001257600080fd5b50604051620029e5380380620029e58339810160408190526200003591620004b8565b60408051808201909152600d81526c21b0b93239a3b7bb32b93737b960991b6020820152620000786040805180820190915260018152603160f81b602082015290565b846001600160a01b038116620000a957604051631e4fbdf760e01b8152600060048201526024015b60405180910390fd5b620000b481620002fb565b50620000c28260016200034b565b61012052620000d38160026200034b565b61014052815160208084019190912060e052815190820120610100524660a0526200016160e05161010051604080517f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f60208201529081019290925260608201524660808201523060a082015260009060c00160405160208183030381529060405280519060200120905090565b60805250503060c052600380546001600160a01b0319166001600160a01b038616179055805160005b81811015620002395760006001600160a01b0316838281518110620001b357620001b36200054d565b60200260200101516001600160a01b031603620001e35760405163d92e233d60e01b815260040160405180910390fd5b600160046000858481518110620001fe57620001fe6200054d565b6020908102919091018101516001600160a01b03168252810191909152604001600020805460ff19169115159190911790556001016200018a565b50825160005b81811015620002ee5760006001600160a01b03168582815181106200026857620002686200054d565b60200260200101516001600160a01b031603620002985760405163d92e233d60e01b815260040160405180910390fd5b600160066000878481518110620002b357620002b36200054d565b6020908102919091018101516001600160a01b03168252810191909152604001600020805460ff19169115159190911790556001016200023f565b5050505050505062000736565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b60006020835110156200036b57620003638362000384565b90506200037e565b81620003788482620005f4565b5060ff90505b92915050565b600080829050601f81511115620003b2578260405163305a27a960e01b8152600401620000a09190620006c0565b8051620003bf8262000711565b179392505050565b6001600160a01b0381168114620003dd57600080fd5b50565b8051620003ed81620003c7565b919050565b634e487b7160e01b600052604160045260246000fd5b600082601f8301126200041a57600080fd5b815160206001600160401b0380831115620004395762000439620003f2565b8260051b604051601f19603f83011681018181108482111715620004615762000461620003f2565b60405293845260208187018101949081019250878511156200048257600080fd5b6020870191505b84821015620004ad576200049d82620003e0565b8352918301919083019062000489565b979650505050505050565b60008060008060808587031215620004cf57600080fd5b8451620004dc81620003c7565b6020860151909450620004ef81620003c7565b60408601519093506001600160401b03808211156200050d57600080fd5b6200051b8883890162000408565b935060608701519150808211156200053257600080fd5b50620005418782880162000408565b91505092959194509250565b634e487b7160e01b600052603260045260246000fd5b600181811c908216806200057857607f821691505b6020821081036200059957634e487b7160e01b600052602260045260246000fd5b50919050565b601f821115620005ef576000816000526020600020601f850160051c81016020861015620005ca5750805b601f850160051c820191505b81811015620005eb57828155600101620005d6565b5050505b505050565b81516001600160401b03811115620006105762000610620003f2565b620006288162000621845462000563565b846200059f565b602080601f831160018114620006605760008415620006475750858301515b600019600386901b1c1916600185901b178555620005eb565b600085815260208120601f198616915b82811015620006915788860151825594840194600190910190840162000670565b5085821015620006b05787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b60006020808352835180602085015260005b81811015620006f057858101830151858201604001528201620006d2565b506000604082860101526040601f19601f8301168501019250505092915050565b80516020808301519190811015620005995760001960209190910360031b1b16919050565b60805160a05160c05160e051610100516101205161014051612254620007916000396000611103015260006110d10152600061187101526000611849015260006117a4015260006117ce015260006117f801526122546000f3fe6080604052600436106101cd5760003560e01c8063715018a6116100f7578063b1610d7e11610095578063ca64b42d11610064578063ca64b42d146105c2578063d6159fe5146105e2578063edacc6fd146105f7578063f2fde38b1461062b57600080fd5b8063b1610d7e1461054d578063bc4e680f14610562578063c01f9e3714610582578063c3fe3e28146105a257600080fd5b806391ddadf4116100d157806391ddadf4146104d75780639ab24eb0146104fa5780639c0281761461051a578063a82cf11e1461053a57600080fd5b8063715018a61461047a57806384b0196e146104915780638da5cb5b146104b957600080fd5b806334ef5f231161016f578063544ffc9c1161013e578063544ffc9c146103e157806354fd4d501461040e5780635e2891ed1461043857806361b63f791461046557600080fd5b806334ef5f2314610337578063354bfd021461034c5780633e4f49e6146103745780634bf5d7e9146103a157600080fd5b80631566f60d116101ab5780631566f60d1461028d578063258ae582146102bb5780632d0eee87146102db5780632d63f693146102fb57600080fd5b806301ffc9a7146101d25780630a9cfcdf14610218578063143489d01461023f575b600080fd5b3480156101de57600080fd5b506102036101ed366004611980565b6001600160e01b0319166301ffc9a760e01b1490565b60405190151581526020015b60405180910390f35b34801561022457600080fd5b5061022d600581565b60405160ff909116815260200161020f565b34801561024b57600080fd5b5061027561025a3660046119aa565b6000908152600760205260409020546001600160a01b031690565b6040516001600160a01b03909116815260200161020f565b34801561029957600080fd5b506102ad6102a8366004611a22565b61064b565b60405190815260200161020f565b3480156102c757600080fd5b506102756102d6366004611a8a565b61069f565b3480156102e757600080fd5b506102ad6102f6366004611b32565b6106e9565b34801561030757600080fd5b506102ad6103163660046119aa565b600090815260076020526040902054600160a01b900465ffffffffffff1690565b34801561034357600080fd5b506102ad600f81565b34801561035857600080fd5b50610361600581565b60405161ffff909116815260200161020f565b34801561038057600080fd5b5061039461038f3660046119aa565b61078d565b60405161020f9190611bda565b3480156103ad57600080fd5b5060408051808201909152600e81526d06d6f64653d74696d657374616d760941b60208201525b60405161020f9190611c2e565b3480156103ed57600080fd5b506104016103fc3660046119aa565b610899565b60405161020f9190611c7d565b34801561041a57600080fd5b506040805180820190915260018152603160f81b60208201526103d4565b34801561044457600080fd5b506102ad6104533660046119aa565b60086020526000908152604090205481565b34801561047157600080fd5b506102ad601981565b34801561048657600080fd5b5061048f6108fe565b005b34801561049d57600080fd5b506104a6610912565b60405161020f9796959493929190611c90565b3480156104c557600080fd5b506000546001600160a01b0316610275565b3480156104e357600080fd5b5060405165ffffffffffff4216815260200161020f565b34801561050657600080fd5b506102ad610515366004611d00565b610958565b34801561052657600080fd5b506102ad610535366004611d1b565b610969565b6102ad610548366004611d50565b610994565b34801561055957600080fd5b506102ad600181565b34801561056e57600080fd5b506102ad61057d366004611d50565b610a74565b34801561058e57600080fd5b506102ad61059d3660046119aa565b610ae5565b3480156105ae57600080fd5b50600354610275906001600160a01b031681565b3480156105ce57600080fd5b506102ad6105dd366004611d50565b610b28565b3480156105ee57600080fd5b506102ad600081565b34801561060357600080fd5b506102ad7f7e60191c0a1ce148b0907bac1d202b8ab62b57e362060506edce8ff5ffeee56181565b34801561063757600080fd5b5061048f610646366004611d00565b610b62565b6000803390506106948782888888888080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250610ba092505050565b979650505050505050565b60006106e18484848080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250610c5092505050565b949350505050565b6001600160a01b038516600090815260046020526040812054339060ff16610723576040516207a6ab60e31b815260040160405180910390fd5b600061072e82610c7a565b905060058110156107695760405163fef093d760e01b81526001600160a01b0383166004820152602481018290526044015b60405180910390fd5b61077587878787610cd3565b61078188838989610e4d565b98975050505050505050565b6000818152600760205260408120805460ff600160f01b8204811691600160f81b90041681156107c257506007949350505050565b80156107d357506002949350505050565b600085815260076020526040812054600160a01b900465ffffffffffff169081900361081557604051636ad0607560e01b815260048101879052602401610760565b65ffffffffffff4216808210610832575060009695505050505050565b600061083d88610ae5565b905081811061085457506001979650505050505050565b6000888152600860205260409020546019101580610878575061087688610fed565b155b1561088b57506003979650505050505050565b506004979650505050505050565b6000818152600860209081526040918290206001018054835181840281018401909452808452606093928301828280156108f257602002820191906000526020600020905b8154815260200190600101908083116108de575b50505050509050919050565b61090661104d565b610910600061107a565b565b6000606080600080600060606109266110ca565b61092e6110fc565b60408051600080825260208201909252600f60f81b9b939a50919850469750309650945092509050565b600061096382610c7a565b92915050565b60008033905061098b8582868660405180602001604052806000815250610ba0565b95945050505050565b6000806109a386868686610b28565b90506109c3816109b36005611129565b6109bd6004611129565b1761114c565b506000818152600760205260408120805460ff60f01b1916600160f01b1790556109ec82611192565b905036600086868460ff16818110610a0657610a06611dc7565b9050602002810190610a189190611ddd565b915091506000610a298a848461121d565b60408051878152602081018390529192507ff758fc91e01b00ea6b4a6138756f7f28e021f9bf21db6dbf8c36c88eb737257a91015b60405180910390a1509298975050505050505050565b600080610a8386868686610b28565b9050610a9881610a936000611129565b61114c565b506000818152600760205260409020546001600160a01b03163314610ad25760405163233d98e360e01b8152336004820152602401610760565b610adb81611291565b9695505050505050565b600081815260076020526040812054610b1a90600160d01b810463ffffffff1690600160a01b900465ffffffffffff16611e3a565b65ffffffffffff1692915050565b600084848484604051602001610b419493929190611f20565b60408051601f19818403018152919052805160209091012095945050505050565b610b6a61104d565b6001600160a01b038116610b9457604051631e4fbdf760e01b815260006004820152602401610760565b610b9d8161107a565b50565b6000610bb086610a936001611129565b506000610bbc86610c7a565b9050801580610bca57508381105b15610be8576040516305bdc6e360e11b815260040160405180910390fd5b610bf2868561133f565b610bfe87878787611383565b856001600160a01b03167fb8e138887d0aa13bab447e82de9d5c1777041ecd21ca36ba824ff1e6c07ddda488878787604051610c3d9493929190611f4d565b60405180910390a2509195945050505050565b600080600080610c608686611406565b925092509250610c708282611453565b5090949350505050565b600080546001600160a01b03166001600160a01b0316826001600160a01b031603610ca757506063919050565b6001600160a01b038216600090815260056020526040902054610cc983611510565b6109639190611f75565b82818114610cf45760405163bb3782af60e01b815260040160405180910390fd5b6005811115610d1657604051630de5482160e11b815260040160405180910390fd5b60005b81811015610e45576000610dda610db67f7e60191c0a1ce148b0907bac1d202b8ab62b57e362060506edce8ff5ffeee561898986818110610d5c57610d5c611dc7565b9050602002810190610d6e9190611ddd565b604051610d7c929190611f88565b604051908190038120610d9b9291602001918252602082015260400190565b60405160208183030381529060405280519060200120611588565b868685818110610dc857610dc8611dc7565b90506020028101906102d69190611ddd565b6001600160a01b03811660009081526006602052604090205490915060ff16610e3c57868683818110610e0f57610e0f611dc7565b9050602002810190610e219190611ddd565b604051631127951360e01b8152600401610760929190611f98565b50600101610d19565b505050505050565b600080610e5c86868686610b28565b600081815260076020526040902054909150600160a01b900465ffffffffffff1615610eaa5780610e8c8261078d565b6040516331b75e4d60e01b8152610760929190600090600401611fac565b6000610ebe8165ffffffffffff4216611fce565b600083815260076020526040902080546001600160a01b0319166001600160a01b038916178155909150600190610ef4836115b5565b815465ffffffffffff91909116600160a01b0265ffffffffffff60a01b19909116178155610f21826115ec565b815463ffffffff91909116600160d01b0263ffffffff60d01b1990911617815560008481526008602052604090208667ffffffffffffffff811115610f6857610f68611db1565b604051908082528060200260200182016040528015610f91578160200160208202803683370190505b508051610fa8916001840191602090910190611929565b507fa924b3fc353aeb313f3de72c69d825f0eb24251a83d56c0cbe41fd4ef440649a858a8c8b8b89610fda8a82611fce565b604051610a5e9796959493929190611fe1565b6000818152600860205260408120815b600182015481101561104357600f82600101828154811061102057611020611dc7565b9060005260206000200154111561103b575060019392505050565b600101610ffd565b5060009392505050565b6000546001600160a01b031633146109105760405163118cdaa760e01b8152336004820152602401610760565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b60606110f77f0000000000000000000000000000000000000000000000000000000000000000600161161d565b905090565b60606110f77f0000000000000000000000000000000000000000000000000000000000000000600261161d565b600081600781111561113d5761113d611ba2565b600160ff919091161b92915050565b6000806111588461078d565b905060008361116683611129565b160361118b578381846040516331b75e4d60e01b815260040161076093929190611fac565b9392505050565b60008181526008602052604081208160015b600183015460ff8216101561121557826001018260ff16815481106111cb576111cb611dc7565b9060005260206000200154836001018260ff16815481106111ee576111ee611dc7565b90600052602060002001541115611203578091505b8061120d8161202a565b9150506111a4565b509392505050565b60405163d85d3d2760e01b81526000906001600160a01b0385169063d85d3d279061124e9086908690600401611f98565b6020604051808303816000875af115801561126d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106e19190612049565b60006112df826112a16007611129565b6112ab6006611129565b6112b56002611129565b60016112c2600782612062565b6112cd90600261215f565b6112d79190611f75565b18181861114c565b506000828152600760205260409081902080546001600160f81b0316600160f81b179055517f789cf55be980739dad1d0699b93b58e806b51c9d96619bfa8fe0a28abaa7b30c906113339084815260200190565b60405180910390a15090565b6001600160a01b038216600090815260056020526040902054611363908290611fce565b6001600160a01b0390921660009081526005602052604090209190915550565b6000848152600860205260409020600181015460ff841611156113b95760405163838f27f560e01b815260040160405180910390fd5b806001018360ff16815481106113d1576113d1611dc7565b600091825260208220018054916113e78361216e565b909155505080548160006113fa8361216e565b91905055505050505050565b600080600083516041036114405760208401516040850151606086015160001a611432888285856116c8565b95509550955050505061144c565b50508151600091506002905b9250925092565b600082600381111561146757611467611ba2565b03611470575050565b600182600381111561148457611484611ba2565b036114a25760405163f645eedf60e01b815260040160405180910390fd5b60028260038111156114b6576114b6611ba2565b036114d75760405163fce698f760e01b815260048101829052602401610760565b60038260038111156114eb576114eb611ba2565b0361150c576040516335e2f38360e21b815260048101829052602401610760565b5050565b600354604051632299761d60e21b81526001600160a01b0383811660048301526000921690638a65d874906024016040805180830381865afa15801561155a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061157e9190612187565b6020015192915050565b6000610963611595611797565b8360405161190160f01b8152600281019290925260228201526042902090565b600065ffffffffffff8211156115e8576040516306dfcc6560e41b81526030600482015260248101839052604401610760565b5090565b600063ffffffff8211156115e8576040516306dfcc6560e41b81526020600482015260248101839052604401610760565b606060ff831461163757611630836118c2565b9050610963565b818054611643906121e4565b80601f016020809104026020016040519081016040528092919081815260200182805461166f906121e4565b80156116bc5780601f10611691576101008083540402835291602001916116bc565b820191906000526020600020905b81548152906001019060200180831161169f57829003601f168201915b50505050509050610963565b600080807f7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a0841115611703575060009150600390508261178d565b604080516000808252602082018084528a905260ff891692820192909252606081018790526080810186905260019060a0016020604051602081039080840390855afa158015611757573d6000803e3d6000fd5b5050604051601f1901519150506001600160a01b0381166117835750600092506001915082905061178d565b9250600091508190505b9450945094915050565b6000306001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000161480156117f057507f000000000000000000000000000000000000000000000000000000000000000046145b1561181a57507f000000000000000000000000000000000000000000000000000000000000000090565b6110f7604080517f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f60208201527f0000000000000000000000000000000000000000000000000000000000000000918101919091527f000000000000000000000000000000000000000000000000000000000000000060608201524660808201523060a082015260009060c00160405160208183030381529060405280519060200120905090565b606060006118cf83611901565b604080516020808252818301909252919250600091906020820181803683375050509182525060208101929092525090565b600060ff8216601f81111561096357604051632cd44ac360e21b815260040160405180910390fd5b828054828255906000526020600020908101928215611964579160200282015b82811115611964578251825591602001919060010190611949565b506115e89291505b808211156115e8576000815560010161196c565b60006020828403121561199257600080fd5b81356001600160e01b03198116811461118b57600080fd5b6000602082840312156119bc57600080fd5b5035919050565b803560ff811681146119d457600080fd5b919050565b60008083601f8401126119eb57600080fd5b50813567ffffffffffffffff811115611a0357600080fd5b602083019150836020828501011115611a1b57600080fd5b9250929050565b600080600080600060808688031215611a3a57600080fd5b85359450611a4a602087016119c3565b935060408601359250606086013567ffffffffffffffff811115611a6d57600080fd5b611a79888289016119d9565b969995985093965092949392505050565b600080600060408486031215611a9f57600080fd5b83359250602084013567ffffffffffffffff811115611abd57600080fd5b611ac9868287016119d9565b9497909650939450505050565b80356001600160a01b03811681146119d457600080fd5b60008083601f840112611aff57600080fd5b50813567ffffffffffffffff811115611b1757600080fd5b6020830191508360208260051b8501011115611a1b57600080fd5b600080600080600060608688031215611b4a57600080fd5b611b5386611ad6565b9450602086013567ffffffffffffffff80821115611b7057600080fd5b611b7c89838a01611aed565b90965094506040880135915080821115611b9557600080fd5b50611a7988828901611aed565b634e487b7160e01b600052602160045260246000fd5b60088110611bd657634e487b7160e01b600052602160045260246000fd5b9052565b602081016109638284611bb8565b6000815180845260005b81811015611c0e57602081850181015186830182015201611bf2565b506000602082860101526020601f19601f83011685010191505092915050565b60208152600061118b6020830184611be8565b60008151808452602080850194506020840160005b83811015611c7257815187529582019590820190600101611c56565b509495945050505050565b60208152600061118b6020830184611c41565b60ff60f81b8816815260e060208201526000611caf60e0830189611be8565b8281036040840152611cc18189611be8565b606084018890526001600160a01b038716608085015260a0840186905283810360c08501529050611cf28185611c41565b9a9950505050505050505050565b600060208284031215611d1257600080fd5b61118b82611ad6565b600080600060608486031215611d3057600080fd5b83359250611d40602085016119c3565b9150604084013590509250925092565b60008060008060608587031215611d6657600080fd5b611d6f85611ad6565b9350611d7d60208601611ad6565b9250604085013567ffffffffffffffff811115611d9957600080fd5b611da587828801611aed565b95989497509550505050565b634e487b7160e01b600052604160045260246000fd5b634e487b7160e01b600052603260045260246000fd5b6000808335601e19843603018112611df457600080fd5b83018035915067ffffffffffffffff821115611e0f57600080fd5b602001915036819003821315611a1b57600080fd5b634e487b7160e01b600052601160045260246000fd5b65ffffffffffff818116838216019080821115611e5957611e59611e24565b5092915050565b81835281816020850137506000828201602090810191909152601f909101601f19169091010190565b6000838385526020808601955060208560051b8301018460005b87811015611f1357848303601f19018952813536889003601e19018112611ec957600080fd5b8701848101903567ffffffffffffffff811115611ee557600080fd5b803603821315611ef457600080fd5b611eff858284611e60565b9a86019a9450505090830190600101611ea3565b5090979650505050505050565b6001600160a01b03858116825284166020820152606060408201819052600090610adb9083018486611e89565b84815260ff84166020820152826040820152608060608201526000610adb6080830184611be8565b8181038181111561096357610963611e24565b8183823760009101908152919050565b6020815260006106e1602083018486611e60565b83815260608101611fc06020830185611bb8565b826040830152949350505050565b8082018082111561096357610963611e24565b8781526001600160a01b0387811660208301528616604082015260c0606082018190526000906120149083018688611e89565b60808301949094525060a0015295945050505050565b600060ff821660ff810361204057612040611e24565b60010192915050565b60006020828403121561205b57600080fd5b5051919050565b60ff818116838216019081111561096357610963611e24565b600181815b808511156120b657816000190482111561209c5761209c611e24565b808516156120a957918102915b93841c9390800290612080565b509250929050565b6000826120cd57506001610963565b816120da57506000610963565b81600181146120f057600281146120fa57612116565b6001915050610963565b60ff84111561210b5761210b611e24565b50506001821b610963565b5060208310610133831016604e8410600b8410161715612139575081810a610963565b612143838361207b565b806000190482111561215757612157611e24565b029392505050565b600061118b60ff8416836120be565b60006001820161218057612180611e24565b5060010190565b60006040828403121561219957600080fd5b6040516040810181811067ffffffffffffffff821117156121ca57634e487b7160e01b600052604160045260246000fd5b604052825181526020928301519281019290925250919050565b600181811c908216806121f857607f821691505b60208210810361221857634e487b7160e01b600052602260045260246000fd5b5091905056fea2646970667358221220cf954036f96d38fc384a3701d51e7bd2dacad84d33f2fa1383b6205fef43eaa364736f6c63430008170033";

type CardsGovernorConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: CardsGovernorConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class CardsGovernor__factory extends ContractFactory {
  constructor(...args: CardsGovernorConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    game_: PromiseOrValue<string>,
    owner_: PromiseOrValue<string>,
    signers_: PromiseOrValue<string>[],
    collections_: PromiseOrValue<string>[],
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<CardsGovernor> {
    return super.deploy(
      game_,
      owner_,
      signers_,
      collections_,
      overrides || {}
    ) as Promise<CardsGovernor>;
  }
  override getDeployTransaction(
    game_: PromiseOrValue<string>,
    owner_: PromiseOrValue<string>,
    signers_: PromiseOrValue<string>[],
    collections_: PromiseOrValue<string>[],
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      game_,
      owner_,
      signers_,
      collections_,
      overrides || {}
    );
  }
  override attach(address: string): CardsGovernor {
    return super.attach(address) as CardsGovernor;
  }
  override connect(signer: Signer): CardsGovernor__factory {
    return super.connect(signer) as CardsGovernor__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): CardsGovernorInterface {
    return new utils.Interface(_abi) as CardsGovernorInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): CardsGovernor {
    return new Contract(address, _abi, signerOrProvider) as CardsGovernor;
  }
}
