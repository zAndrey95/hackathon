/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../common";
import type {
  CardsAgainstHumanity,
  CardsAgainstHumanityInterface,
} from "../../contracts/CardsAgainstHumanity";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_enthropy",
        type: "address",
      },
      {
        internalType: "address",
        name: "_randomProvider",
        type: "address",
      },
      {
        internalType: "address",
        name: "_questionsCollection",
        type: "address",
      },
      {
        internalType: "address",
        name: "_answersCollection",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "AlreadyDone",
    type: "error",
  },
  {
    inputs: [],
    name: "HasActiveGame",
    type: "error",
  },
  {
    inputs: [],
    name: "IncorrectSequenceNumber",
    type: "error",
  },
  {
    inputs: [],
    name: "InsufficientFunds",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidCard",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidGameStatus",
    type: "error",
  },
  {
    inputs: [],
    name: "NoActiveGame",
    type: "error",
  },
  {
    inputs: [],
    name: "NoCards",
    type: "error",
  },
  {
    inputs: [],
    name: "NotParticipate",
    type: "error",
  },
  {
    inputs: [],
    name: "NotSubmitted",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "OwnableInvalidOwner",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "OwnableUnauthorizedAccount",
    type: "error",
  },
  {
    inputs: [],
    name: "PlayerNotFound",
    type: "error",
  },
  {
    inputs: [],
    name: "RolesNotAssigned",
    type: "error",
  },
  {
    inputs: [],
    name: "TransferFailed",
    type: "error",
  },
  {
    inputs: [],
    name: "ZeroAddress",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "gameId",
        type: "uint256",
      },
    ],
    name: "GameCanceledByOwner",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "gameId",
        type: "uint256",
      },
    ],
    name: "GameCreated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "gameId",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "address",
        name: "judge",
        type: "address",
      },
    ],
    name: "JudgeSelected",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "gameId",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "address",
        name: "winner",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint64",
        name: "answer",
        type: "uint64",
      },
    ],
    name: "JudgeSelectedWinner",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "gameId",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "address",
        name: "player",
        type: "address",
      },
    ],
    name: "PlayerJoined",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "gameId",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "address",
        name: "player",
        type: "address",
      },
    ],
    name: "PlayerReceivedCards",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "gameId",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "address",
        name: "player",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint64",
        name: "answer",
        type: "uint64",
      },
    ],
    name: "PlayerSubmitAnswer",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "gameId",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "address",
        name: "player",
        type: "address",
      },
    ],
    name: "UserRandomRequstested",
    type: "event",
  },
  {
    inputs: [],
    name: "answersCollection",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "gameId",
        type: "uint256",
      },
    ],
    name: "cancelGame",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "entropy",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "gamesCounter",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "gameId",
        type: "uint256",
      },
    ],
    name: "getActionsCountForRound",
    outputs: [
      {
        internalType: "uint16",
        name: "",
        type: "uint16",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getActiveGames",
    outputs: [
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "gameId",
        type: "uint256",
      },
    ],
    name: "getGamePlayers",
    outputs: [
      {
        internalType: "address[]",
        name: "",
        type: "address[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "gameId",
        type: "uint256",
      },
    ],
    name: "getGameResults",
    outputs: [
      {
        internalType: "address",
        name: "winner",
        type: "address",
      },
      {
        internalType: "uint64",
        name: "winningAnswer",
        type: "uint64",
      },
      {
        internalType: "uint64",
        name: "question",
        type: "uint64",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "gameId",
        type: "uint256",
      },
    ],
    name: "getGameStatus",
    outputs: [
      {
        internalType: "enum CardsAgainstHumanity.GameStatus",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "player",
        type: "address",
      },
    ],
    name: "getPlayerActiveGame",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "player",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "gameId",
        type: "uint256",
      },
    ],
    name: "getPlayerAnswerCards",
    outputs: [
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "gameId",
        type: "uint256",
      },
      {
        internalType: "uint64",
        name: "answer",
        type: "uint64",
      },
    ],
    name: "getPlayerBySelectedAnswer",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "player",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "gameId",
        type: "uint256",
      },
    ],
    name: "getPlayerQuestionCard",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "player",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "gameId",
        type: "uint256",
      },
    ],
    name: "getPlayerRoleInGame",
    outputs: [
      {
        internalType: "enum CardsAgainstHumanity.PlayerRole",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "player",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "gameId",
        type: "uint256",
      },
    ],
    name: "getPlayerSelectedAnswer",
    outputs: [
      {
        internalType: "uint64",
        name: "",
        type: "uint64",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "player",
        type: "address",
      },
    ],
    name: "getPlayerSequenceNumber",
    outputs: [
      {
        internalType: "uint64",
        name: "",
        type: "uint64",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getRandomProviderFee",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "gameId",
        type: "uint256",
      },
    ],
    name: "getSelectedAnswers",
    outputs: [
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "player",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "gameId",
        type: "uint256",
      },
    ],
    name: "getUserStatus",
    outputs: [
      {
        internalType: "enum CardsAgainstHumanity.UserStatus",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "player",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "gameId",
        type: "uint256",
      },
    ],
    name: "isPlayer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32[5]",
        name: "_commitments",
        type: "bytes32[5]",
      },
    ],
    name: "joinGame",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "maxPlayers",
    outputs: [
      {
        internalType: "uint16",
        name: "",
        type: "uint16",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "gameId",
        type: "uint256",
      },
      {
        internalType: "uint64",
        name: "sequenceNumber",
        type: "uint64",
      },
      {
        internalType: "bytes32[5]",
        name: "userRandoms",
        type: "bytes32[5]",
      },
      {
        internalType: "bytes32",
        name: "providerRandom",
        type: "bytes32",
      },
    ],
    name: "playerReceivedCards",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "gameId",
        type: "uint256",
      },
      {
        internalType: "uint64",
        name: "card",
        type: "uint64",
      },
    ],
    name: "playerSendSelected",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "questionsCollection",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "randomProvider",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "totalAnswers",
    outputs: [
      {
        internalType: "uint16",
        name: "",
        type: "uint16",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalQuestions",
    outputs: [
      {
        internalType: "uint16",
        name: "",
        type: "uint16",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "userStats",
    outputs: [
      {
        internalType: "uint256",
        name: "games",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "winner",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60806040523480156200001157600080fd5b5060405162002b4538038062002b458339810160408190526200003491620001a2565b33806200005b57604051631e4fbdf760e01b81526000600482015260240160405180910390fd5b620000668162000135565b506001600160a01b03841615806200008557506001600160a01b038316155b806200009857506001600160a01b038216155b80620000ab57506001600160a01b038116155b15620000ca5760405163d92e233d60e01b815260040160405180910390fd5b600280546001600160a01b038087166001600160a01b03199283161790925560038054868416908316179055600480548584169083161790556005805492841692909116919091179055600680549060006200012683620001ff565b91905055505050505062000227565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b80516001600160a01b03811681146200019d57600080fd5b919050565b60008060008060808587031215620001b957600080fd5b620001c48562000185565b9350620001d46020860162000185565b9250620001e46040860162000185565b9150620001f46060860162000185565b905092959194509250565b6000600182016200022057634e487b7160e01b600052601160045260246000fd5b5060010190565b61290e80620002376000396000f3fe6080604052600436106101e35760003560e01c80638a65d87411610102578063c90a7cc911610095578063edd9f44311610064578063edd9f44314610693578063f2fde38b146106b3578063fc056484146106d3578063fecb96a4146106f357600080fd5b8063c90a7cc9146105e4578063dcef63eb14610604578063de42494514610653578063eaa5ac3c1461067357600080fd5b8063ad7465d4116100d1578063ad7465d414610541578063bea5b91414610577578063c04759301461058c578063c62e02f8146105ac57600080fd5b80638a65d8741461049a5780638da5cb5b146104e35780638f46500e14610501578063ad3d65b71461052157600080fd5b806350a758f51161017a57806369958ab91161014957806369958ab9146103c45780636fd9e9e4146103e6578063715018a6146104325780638039d32c1461044757600080fd5b806350a758f51461036b578063559e3ad91461038b5780635eb6a78f146103ae5780636419ad3b1461035657600080fd5b806335a6e9ab116101b657806335a6e9ab146102aa57806342d17f63146102da57806347ce07cc1461031e5780634c2412a21461035657600080fd5b80630f1bf454146101e857806315a40f491461022e5780631b76929c1461025b5780631ddd7fe91461027d575b600080fd5b3480156101f457600080fd5b506102186102033660046124c3565b60009081526011602052604090205460ff1690565b60405161022591906124f2565b60405180910390f35b34801561023a57600080fd5b5061024e6102493660046124c3565b610706565b604051610225919061250c565b34801561026757600080fd5b506102706107d6565b6040516102259190612559565b34801561028957600080fd5b5061029d6102983660046125ad565b610871565b60405161022591906125d7565b3480156102b657600080fd5b506102ca6102c53660046125ad565b610936565b6040519015158152602001610225565b3480156102e657600080fd5b5061030b6102f53660046124c3565b60009081526012602052604090205461ffff1690565b60405161ffff9091168152602001610225565b34801561032a57600080fd5b5060025461033e906001600160a01b031681565b6040516001600160a01b039091168152602001610225565b34801561036257600080fd5b5061030b600481565b34801561037757600080fd5b506102706103863660046124c3565b610955565b34801561039757600080fd5b506103a0610a11565b604051908152602001610225565b3480156103ba57600080fd5b506103a060065481565b3480156103d057600080fd5b506103e46103df3660046124c3565b610aaf565b005b3480156103f257600080fd5b5061033e610401366004612600565b60009182526017602090815260408084206001600160401b039390931684529190529020546001600160a01b031690565b34801561043e57600080fd5b506103e4610be3565b34801561045357600080fd5b5061048d6104623660046125ad565b6001600160a01b03919091166000908152600c60209081526040808320938352929052205460ff1690565b6040516102259190612630565b3480156104a657600080fd5b506104ce6104b5366004612644565b6001602081905260009182526040909120805491015482565b60408051928352602083019190915201610225565b3480156104ef57600080fd5b506000546001600160a01b031661033e565b34801561050d57600080fd5b5060035461033e906001600160a01b031681565b34801561052d57600080fd5b506103e461053c366004612600565b610bf7565b34801561054d57600080fd5b506103a061055c366004612644565b6001600160a01b03166000908152600d602052604090205490565b34801561058357600080fd5b5061030b600181565b34801561059857600080fd5b506102706105a73660046125ad565b611044565b3480156105b857600080fd5b506105cc6105c7366004612644565b6111e0565b6040516001600160401b039091168152602001610225565b3480156105f057600080fd5b506105cc6105ff3660046125ad565b61123c565b34801561061057600080fd5b5061062461061f3660046124c3565b6112c7565b604080516001600160a01b0390941684526001600160401b039283166020850152911690820152606001610225565b34801561065f57600080fd5b506103e461066e3660046126f0565b61135c565b34801561067f57600080fd5b5060045461033e906001600160a01b031681565b34801561069f57600080fd5b506103a06106ae3660046125ad565b611876565b3480156106bf57600080fd5b506103e46106ce366004612644565b611944565b3480156106df57600080fd5b5060055461033e906001600160a01b031681565b6103e4610701366004612738565b611987565b60008181526010602052604081206060919061072190611d04565b6001600160401b038111156107385761073861265f565b604051908082528060200260200182016040528015610761578160200160208202803683370190505b50905060005b600084815260106020526040902061077e90611d04565b8110156107cf57600084815260106020526040902061079d9082611d0e565b8282815181106107af576107af612754565b6001600160a01b0390921660209283029190910190910152600101610767565b5092915050565b606060006107e46007611d04565b6001600160401b038111156107fb576107fb61265f565b604051908082528060200260200182016040528015610824578160200160208202803683370190505b50905060005b6108346007611d04565b81101561086b57610846600782611d0e565b82828151811061085857610858612754565b602090810291909101015260010161082a565b50919050565b6000818152601160209081526040808320546010909252822060ff9091169061089a9085611d1a565b6108b757604051632a645edb60e01b815260040160405180910390fd5b60008160058111156108cb576108cb6124dc565b14806108e8575060018160058111156108e6576108e66124dc565b145b156109065760405163afc30c5160e01b815260040160405180910390fd5b50506001600160a01b0382166000908152600b6020908152604080832084845290915290205460ff165b92915050565b600081815260106020526040812061094e9084611d1a565b9392505050565b60008181526016602052604081206060919061097090611d04565b6001600160401b038111156109875761098761265f565b6040519080825280602002602001820160405280156109b0578160200160208202803683370190505b50905060005b60008481526016602052604090206109cd90611d04565b8110156107cf5760008481526016602052604090206109ec9082611d0e565b8282815181106109fe576109fe612754565b60209081029190910101526001016109b6565b6000610a1f60016004612780565b600254600354604051631711922960e31b81526001600160a01b03918216600482015261ffff939093169291169063b88c914890602401602060405180830381865afa158015610a73573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a97919061279b565b610aa191906127c4565b6001600160801b0316905090565b610ab7611d3c565b60008181526011602052604090205460ff166001816005811115610add57610add6124dc565b1480610afa57506002816005811115610af857610af86124dc565b145b80610b1657506003816005811115610b1457610b146124dc565b145b15610bca576000828152601160205260409020805460ff19166005179055610b3f600783611d69565b5060005b6000838152601060205260409020610b5a90611d04565b811015610b9a576000838152601060205260408120610b799083611d0e565b6001600160a01b03166000908152600d602052604081205550600101610b43565b5060405182907fff9f936fb160b35c28593c9378dd4ca260f5f05282b406225ff63a582d4a22d490600090a25050565b604051638f8af25f60e01b815260040160405180910390fd5b610beb611d3c565b610bf56000611d75565b565b600082815260116020908152604080832054338452600b835281842086855290925282205460ff91821692911690610c31600160046127ef565b6000868152601060205260409020909150610c4c9033611d1a565b610c695760405163fbff95ab60e01b815260040160405180910390fd5b6000826001811115610c7d57610c7d6124dc565b03610eb3576002836005811115610c9657610c966124dc565b14610cb457604051638f8af25f60e01b815260040160405180910390fd5b336000908152600e602090815260408083208884529091529020610ce1906001600160401b038616611dc5565b610cfe57604051630eefa23760e11b815260040160405180910390fd5b6003336000908152600c6020908152604080832089845290915290205460ff166004811115610d2f57610d2f6124dc565b03610d4d57604051630bdb902160e41b815260040160405180910390fd5b336000818152600c602090815260408083208984528252808320805460ff191660031790556015825280832093835292815282822080546001600160401b03891667ffffffffffffffff1990911617905587825260129052908120805460019290610dbd90849061ffff16612780565b825461ffff9182166101009390930a928302919092021990911617905550336000908152600d6020908152604080832083905587835260169091529020610e0d906001600160401b038616611ddd565b5060008581526017602090815260408083206001600160401b0388168452825280832080546001600160a01b03191633179055878352601290915290205461ffff808316911603610e72576000858152601160205260409020805460ff191660031790555b6040516001600160401b0385168152339086907ffcdb94903d3eaf078cdce3e2fcc80404df8dc1c2c075553a33f144159f2d26f89060200160405180910390a35b6001826001811115610ec757610ec76124dc565b0361103d576003836005811115610ee057610ee06124dc565b14610efe57604051638f8af25f60e01b815260040160405180910390fd5b6000858152601660205260409020610f1f906001600160401b038616611dc5565b610f3c57604051630eefa23760e11b815260040160405180910390fd5b6000858152601460209081526040808320805467ffffffffffffffff19166001600160401b038916908117909155601783528184209084528252808320546001600160a01b0316835260019182905282208101805491929091610fa090849061280a565b9091555050336000908152600c6020908152604080832088845282528083208054600460ff1991821681179092556011909352922080549091169091179055610fea600786611d69565b50336000818152600d602090815260408083209290925590516001600160401b038716815287917fd5a059edf77ce9b6e92e462c0cd2504e31697d57ac288a92359af747e7c395bb910160405180910390a35b5050505050565b606060006001600160a01b0384166000908152600c6020908152604080832086845290915290205460ff166004811115611080576110806124dc565b14806110c3575060016001600160a01b0384166000908152600c6020908152604080832086845290915290205460ff1660048111156110c1576110c16124dc565b145b156110e1576040516306a9e9df60e01b815260040160405180910390fd5b6001600160a01b0383166000908152600e60209081526040808320858452909152812061110d90611d04565b6001600160401b038111156111245761112461265f565b60405190808252806020026020018201604052801561114d578160200160208202803683370190505b50905060005b6001600160a01b0385166000908152600e60209081526040808320878452909152902061117f90611d04565b8110156111d8576001600160a01b0385166000908152600e6020908152604080832087845290915290206111b39082611d0e565b8282815181106111c5576111c5612754565b6020908102919091010152600101611153565b509392505050565b6001600160a01b0381166000908152600d60205260408120548103611217576040516295b66160e61b815260040160405180910390fd5b506001600160a01b03166000908152600960205260409020546001600160401b031690565b600060036001600160a01b0384166000908152600c6020908152604080832086845290915290205460ff166004811115611278576112786124dc565b146112965760405163448ad72360e01b815260040160405180910390fd5b5060009081526015602090815260408083206001600160a01b0394909416835292905220546001600160401b031690565b60008080600460008581526011602052604090205460ff1660058111156112f0576112f06124dc565b1461130e57604051638f8af25f60e01b815260040160405180910390fd5b505050600081815260176020908152604080832060148352818420546001600160401b039081168086529184528285205495855260139093529220546001600160a01b039093169391921690565b60008481526011602052604090205460ff166001816005811115611382576113826124dc565b148061139f5750600081600581111561139d5761139d6124dc565b145b15610bca5760008581526010602052604090206113bc9033611d1a565b6113d95760405163fbff95ab60e01b815260040160405180910390fd5b6002336000908152600c6020908152604080832089845290915290205460ff16600481111561140a5761140a6124dc565b0361142857604051630bdb902160e41b815260040160405180910390fd5b600061143d8561143786611de9565b85611eec565b905060005b60058161ffff1610156116ba5761145b6001600561281d565b8161ffff161461159357600082868361ffff166005811061147e5761147e612754565b6020020151866040516020016114a7939291909283526020830191909152604082015260600190565b60408051601f19818403018152918152815160209283012060008b8152601984528281206005546001600160a01b03168252909352908220549092506114ed9083612830565b60055460008b81526019602090815260408083206001600160a01b039094168084529390915281205492935091611527918c918590611fe3565b60008b81526019602090815260408083206005546001600160a01b031684529091528120805492935060019290919061156190849061281d565b9091555050336000908152600e602090815260408083208d8452909152902061158a9082611ddd565b505050506116a8565b60008781526019602090815260408083206004546001600160a01b031684529091528120546115c29084612830565b6000898152601a602090815260408083208054825180850191909152808301899052825180820384018152606090910183528051908401208d85529055600454601983528184206001600160a01b039091168085529252822054929350909161162e918b918590611fe3565b60008a81526019602090815260408083206004546001600160a01b031684529091528120805492935060019290919061166890849061281d565b9091555050336000908152600f602090815260408083208c84529091529020805467ffffffffffffffff19166001600160401b0392909216919091179055505b806116b281612852565b915050611442565b5060008681526012602052604081208054600192906116de90849061ffff16612780565b82546101009290920a61ffff81810219909316919092169190910217905550336000818152600c602090815260408083208a84528252808320805460ff191660021790558383526009909152808220805467ffffffffffffffff191690555188917f77cdee7cfd2b4600233e9cc9f68d9dd67bc4540e8dc4f0627c72fe1f454ef14791a360008681526012602052604090205461ffff1660031901611870576000868152601a602052604081205461179890600490612830565b6000888152601160209081526040808320805460ff1916600217905560109091528120919250906117c99083611d0e565b6001600160a01b0381166000818152600b602090815260408083208d84528252808320805460ff19166001179055838352600f82528083208d84528252808320546013835281842080546001600160401b0390921667ffffffffffffffff199092169190911790556012909152808220805461ffff191690555192935090918a917f59c74790097e8f6b786ab6305913ee17fbf2b4b2264f0dc7609649982cebf89a91a350505b5061103d565b6000806001600160a01b0384166000908152600c6020908152604080832086845290915290205460ff1660048111156118b1576118b16124dc565b14806118f4575060016001600160a01b0384166000908152600c6020908152604080832086845290915290205460ff1660048111156118f2576118f26124dc565b145b15611912576040516306a9e9df60e01b815260040160405180910390fd5b506001600160a01b03919091166000908152600f6020908152604080832093835292905220546001600160401b031690565b61194c611d3c565b6001600160a01b03811661197b57604051631e4fbdf760e01b8152600060048201526024015b60405180910390fd5b61198481611d75565b50565b611990336120d6565b61199a3334612110565b60065460008181526010602052604090206119b490611d04565b600003611b1f57600081815260116020908152604091829020805460ff1916905560055482516318160ddd60e01b815292516001600160a01b03909116926318160ddd9260048083019391928290030181865afa158015611a19573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611a3d9190612873565b60065460009081526019602090815260408083206005546001600160a01b03908116855290835292819020939093556004805484516318160ddd60e01b815294519316936318160ddd93818301939290918290030181865afa158015611aa7573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611acb9190612873565b60065460009081526019602090815260408083206004546001600160a01b0316845290915280822092909255905182917fbd19c47e9925eb6f7be8bb1c13a841e0240aaeaf17f217e90022e9c8eb66877f91a25b600254600354604051631711922960e31b81526001600160a01b039182166004820152600092919091169063b88c914890602401602060405180830381865afa158015611b70573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611b94919061279b565b6003546001600160801b03919091169150600090611bc4906001600160a01b0316611bbe866121e1565b84612241565b6001600160401b0381166000818152600a6020908152604080832080546001600160a01b0319163390811790915580845260098352818420805467ffffffffffffffff191690951790945587835260109091529020919250611c2691906122ce565b50336000818152600c602090815260408083208784528252808320805460ff191660019081179091559383529083905281208054909190611c6890849061280a565b9091555050336000818152600d60205260408082208690555185917f87969bc7faf902221a147b95ceba76e011c5efb0339a0a8ee7a2bb82d9cfbbd691a36000838152601060205260409020600490611cc090611d04565b03611cfe576000838152601160205260409020805460ff19166001179055611ce9600784611ddd565b50600660008154611cf99061288c565b909155505b50505050565b6000610930825490565b600061094e83836122e3565b6001600160a01b0381166000908152600183016020526040812054151561094e565b6000546001600160a01b03163314610bf55760405163118cdaa760e01b8152336004820152602401611972565b600061094e838361230d565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6000818152600183016020526040812054151561094e565b600061094e8383612400565b80516040805160208101929092526000910160408051808303601f1901815282825280516020918201208582015191840191909152910160408051808303601f1901815282825280516020918201208683015191840191909152910160408051808303601f190181528282528051602091820120606088015191840191909152910160408051808303601f190181528282528051602091820120608089015191840191909152910160408051601f198184030181528282528051602091820120908301969096528101939093526060830191909152608082015260a081019190915260c0015b604051602081830303815290604052805190602001209050919050565b6001600160401b0383166000908152600a60205260408120546001600160a01b03163314611f2d5760405163ca81e48b60e01b815260040160405180910390fd5b6001600160401b0384166000818152600a60205260409081902080546001600160a01b03191690556002546003549151639371df5160e01b81526001600160a01b039283166004820152602481019390935260448301869052606483018590521690639371df51906084016020604051808303816000875af1158015611fb7573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611fdb9190612873565b949350505050565b60008481526018602090815260408083206001600160a01b038716845282528083208584529091528120548181810361201d575083612020565b50805b600061202d60018661281d565b90508086146120cb5760008881526018602090815260408083206001600160a01b038b16845282528083208484529091528120549081900361209b5760008981526018602090815260408083206001600160a01b038c16845282528083208a845290915290208290556120c9565b60008981526018602090815260408083206001600160a01b038c16845282528083208a845290915290208190555b505b509695505050505050565b6001600160a01b0381166000908152600d6020526040902054156119845760405160016206e52360e31b0319815260040160405180910390fd5b600254600354604051631711922960e31b81526001600160a01b039182166004820152600092919091169063b88c914890602401602060405180830381865afa158015612161573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612185919061279b565b6001600160801b031690508082106121c35760008183116121a75760006121b1565b6121b1828461281d565b90508015611cfe57611cfe848261244f565b60405163356680b760e01b815260040160405180910390fd5b505050565b80516020808301516040808501516060808701516080808901518551978801989098529386019490945284015282015260a081019190915260009060c00160408051601f1981840301815282825280516020918201209083015201611ecf565b6002546040516393cbf21760e01b81526001600160a01b038581166004830152602482018590526001604483015260009283929116906393cbf21790859060640160206040518083038185885af11580156122a0573d6000803e3d6000fd5b50505050506040513d601f19601f820116820180604052508101906122c591906128a5565b95945050505050565b600061094e836001600160a01b038416612400565b60008260000182815481106122fa576122fa612754565b9060005260206000200154905092915050565b600081815260018301602052604081205480156123f657600061233160018361281d565b85549091506000906123459060019061281d565b90508082146123aa57600086600001828154811061236557612365612754565b906000526020600020015490508087600001848154811061238857612388612754565b6000918252602080832090910192909255918252600188019052604090208390555b85548690806123bb576123bb6128c2565b600190038181906000526020600020016000905590558560010160008681526020019081526020016000206000905560019350505050610930565b6000915050610930565b600081815260018301602052604081205461244757508154600181810184556000848152602080822090930184905584548482528286019093526040902091909155610930565b506000610930565b6000826001600160a01b03168260405160006040518083038185875af1925050503d806000811461249c576040519150601f19603f3d011682016040523d82523d6000602084013e6124a1565b606091505b50509050806121dc576040516312171d8360e31b815260040160405180910390fd5b6000602082840312156124d557600080fd5b5035919050565b634e487b7160e01b600052602160045260246000fd5b6020810160068310612506576125066124dc565b91905290565b6020808252825182820181905260009190848201906040850190845b8181101561254d5783516001600160a01b031683529284019291840191600101612528565b50909695505050505050565b6020808252825182820181905260009190848201906040850190845b8181101561254d57835183529284019291840191600101612575565b80356001600160a01b03811681146125a857600080fd5b919050565b600080604083850312156125c057600080fd5b6125c983612591565b946020939093013593505050565b6020810160028310612506576125066124dc565b6001600160401b038116811461198457600080fd5b6000806040838503121561261357600080fd5b823591506020830135612625816125eb565b809150509250929050565b6020810160058310612506576125066124dc565b60006020828403121561265657600080fd5b61094e82612591565b634e487b7160e01b600052604160045260246000fd5b600082601f83011261268657600080fd5b60405160a081018181106001600160401b03821117156126b657634e487b7160e01b600052604160045260246000fd5b6040528060a08401858111156126cb57600080fd5b845b818110156126e55780358352602092830192016126cd565b509195945050505050565b600080600080610100858703121561270757600080fd5b843593506020850135612719816125eb565b92506127288660408701612675565b9396929550929360e00135925050565b600060a0828403121561274a57600080fd5b61094e8383612675565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b61ffff8181168382160190808211156107cf576107cf61276a565b6000602082840312156127ad57600080fd5b81516001600160801b038116811461094e57600080fd5b6001600160801b038181168382160280821691908281146127e7576127e761276a565b505092915050565b61ffff8281168282160390808211156107cf576107cf61276a565b808201808211156109305761093061276a565b818103818111156109305761093061276a565b60008261284d57634e487b7160e01b600052601260045260246000fd5b500690565b600061ffff8083168181036128695761286961276a565b6001019392505050565b60006020828403121561288557600080fd5b5051919050565b60006001820161289e5761289e61276a565b5060010190565b6000602082840312156128b757600080fd5b815161094e816125eb565b634e487b7160e01b600052603160045260246000fdfea2646970667358221220e17069e682ff0b04c1aa4f0961de2824ed01cea5faf5f04003807d8615c68e5b64736f6c63430008170033";

type CardsAgainstHumanityConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: CardsAgainstHumanityConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class CardsAgainstHumanity__factory extends ContractFactory {
  constructor(...args: CardsAgainstHumanityConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _enthropy: PromiseOrValue<string>,
    _randomProvider: PromiseOrValue<string>,
    _questionsCollection: PromiseOrValue<string>,
    _answersCollection: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<CardsAgainstHumanity> {
    return super.deploy(
      _enthropy,
      _randomProvider,
      _questionsCollection,
      _answersCollection,
      overrides || {}
    ) as Promise<CardsAgainstHumanity>;
  }
  override getDeployTransaction(
    _enthropy: PromiseOrValue<string>,
    _randomProvider: PromiseOrValue<string>,
    _questionsCollection: PromiseOrValue<string>,
    _answersCollection: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _enthropy,
      _randomProvider,
      _questionsCollection,
      _answersCollection,
      overrides || {}
    );
  }
  override attach(address: string): CardsAgainstHumanity {
    return super.attach(address) as CardsAgainstHumanity;
  }
  override connect(signer: Signer): CardsAgainstHumanity__factory {
    return super.connect(signer) as CardsAgainstHumanity__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): CardsAgainstHumanityInterface {
    return new utils.Interface(_abi) as CardsAgainstHumanityInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): CardsAgainstHumanity {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as CardsAgainstHumanity;
  }
}
