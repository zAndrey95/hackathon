/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../common";
import type {
  MockGame,
  MockGameInterface,
} from "../../../contracts/test/MockGame";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "games",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "winner",
            type: "uint256",
          },
        ],
        internalType: "struct MockGame.UserStats",
        name: "data",
        type: "tuple",
      },
    ],
    name: "setMockStats",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "stats",
    outputs: [
      {
        internalType: "uint256",
        name: "games",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "winner",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "user",
        type: "address",
      },
    ],
    name: "userStats",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "games",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "winner",
            type: "uint256",
          },
        ],
        internalType: "struct MockGame.UserStats",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b50610223806100206000396000f3fe608060405234801561001057600080fd5b50600436106100415760003560e01c80638a65d874146100465780638bcdcbf3146100b9578063c4a5c73e146100f5575b600080fd5b61009961005436600461014a565b6040805180820190915260008082526020820152506001600160a01b031660009081526020818152604091829020825180840190935280548352600101549082015290565b604080518251815260209283015192810192909252015b60405180910390f35b6100e06100c736600461014a565b6000602081905290815260409020805460019091015482565b604080519283526020830191909152016100b0565b61012c61010336600461016c565b6001600160a01b0390911660009081526020818152604090912082518155910151600190910155565b005b80356001600160a01b038116811461014557600080fd5b919050565b60006020828403121561015c57600080fd5b6101658261012e565b9392505050565b600080828403606081121561018057600080fd5b6101898461012e565b92506040601f198201121561019d57600080fd5b506040516040810181811067ffffffffffffffff821117156101cf57634e487b7160e01b600052604160045260246000fd5b6040908152602085810135835294013593810193909352509290915056fea26469706673582212200dc7a2010712aaee7a5a29f4628cdf22c7b090537f796b922981d7b5b808a43264736f6c63430008170033";

type MockGameConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: MockGameConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class MockGame__factory extends ContractFactory {
  constructor(...args: MockGameConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<MockGame> {
    return super.deploy(overrides || {}) as Promise<MockGame>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): MockGame {
    return super.attach(address) as MockGame;
  }
  override connect(signer: Signer): MockGame__factory {
    return super.connect(signer) as MockGame__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): MockGameInterface {
    return new utils.Interface(_abi) as MockGameInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): MockGame {
    return new Contract(address, _abi, signerOrProvider) as MockGame;
  }
}
